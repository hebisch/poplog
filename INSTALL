Quick install:
 
1. Get core source and packages (if desired)

2. Put corepop binary at 'target/pop/corepop'

3. Configure and build:

  ./configure
  make
  make buildclean

More detailed information.

To build Poplog you need basic build tools like 'gcc' and 'make'
and basic development libraries like ncurses.  To get full
functionality you should install development versions
of X libraries and Motif.  For popvison install 'lapack'
(and appropriate BLAS library).

On Debian (or Ubuntu) you probably need: libx11-dev, libxt-dev,
libice-dev, libsm-dev, libxau-dev, libxdmcp-dev, libxpm-dev,
libmotif-dev, libncurses-dev, libopenblas-base, liblapacke.

Main part of Poplog is written in Pop-11, so to build Poplog,
you need compiler for Pop-11.  Poplog contains compiler for
Pop-11, but to minimise binary dependency we use 'corepop'
binary (version of Poplog with minimal functionality).
'corepop' is included in buidable tarball.  If you have
reasonably new 'corepop' you can use it.  Alternatively,
you can fetch 'corepop' like:

  wget https://poplog.fricas.org/corepops/corepop.amd64

(for x86_64 Linux) or

  wget https://poplog.fricas.org/corepops/corepop.i386

(32-bit corepop for i386 Linux) or

  wget https://poplog.fricas.org/corepops/corepop.arm

(32-bit corepop for ARM Linux) or

  wget https://poplog.fricas.org/corepops/corepop_freebsd.amd64

(64-bit corepop for x86_64 FreeBSD) or

  wget https://poplog.fricas.org/corepops/corepop_solaris.i386

(32-bit corepop for i386/x86_64 Solaris 10).

To get layout of Poplog tree resembling traditional layout use:

  ./configure --target_subdir=pop

Before configuration you need to put 'corepop' in target subtree,
in default configuration as 'target/pop/corepop', in traditional
layout as 'pop/pop/corepop'.  After that, if you are in hurry
you can just run:

  make
  make buildclean

'make' build everything, 'make buildclean' removes files needed
only during build (but leaves in place generated 'Makefile').

It is better to do proper bootstrap, that is build new 'corepop'
first:

  make stamp_new_corepop

Then replace old 'corepop' by new one:

  mv target/pop/new_corepop target/pop/corepop

(above replace 'target' by configured value).  After that
do

  make
  make buildclean

Choice of C compiler and assembler:

By default build uses 'cc' as C compiler (needed to compile
Poplog runtime support).  You can specify different compiler
at configure stage like:

CC=clang ./configure

That is, when you run 'configure' envirionment variable CC should
be set to desired compiler.

You can specify alternative assembler when running 'make' like:

make POP__as='/path/to/alternative/as'
