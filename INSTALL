Quick install:
 
1. Get core source and packages (if desired)

2. Put corepop binary at 'target/pop/corepop'

3. Configure and build:

  ./configure
  make
  make buidclean

More detailed information.

To build Poplog you need basic build tools like 'gcc' and 'make'.
To get full functionality you should install developement versions
of X libraries, Motif and ncurses.  For popvison install 'lapack'.

On Debian (or Ubuntu) you probably need: libx11-dev, libxt-dev,
libice-dev, libsm-dev, libxau-dev, libxdmcp-dev, libxpm-dev,
libmotif-dev, libncurses-dev, libopenblas-base, liblapacke.

Main part of Poplog is written in Pop-11, so to build Poplog,
you need compiler for Pop-11.  Poplog contains compiler for
Pop-11, but to minimize binary dependency we use 'corepop'
binary (version of Poplog with minimal functionality).
'corepop' is included in buidable tarball.  If you have
reasonably new 'corepop' you can use it.  Aternatively,
you can fetch 'corepop' like:

  wget https://www.math.uni.wroc.pl/~hebisch/poplog/corepop.amd64

(for x86_64) or

  wget https://www.math.uni.wroc.pl/~hebisch/poplog/corepop.i386

(32-bit corepop for i386).

To get layout of Poplog tree resembing traditional layout use:

  ./configure --target_subdir=pop

Before configuration you need to put 'corepop' in target subtree,
in default configuration as 'target/pop/corepop', in traditional
layout as 'pop/pop/corepop'.  After that, if you are in hurry
you can just run:

  make
  make buildclean

'make' build everthing, 'make buildclean' removes files needed
only during build (but leaves in place generated 'Makefile').

It is better to do proper bootstrap, that is build new 'corepop'
first:

  make stamp_new_corepop

Then replace old 'corepop' by new one:

  mv target/pop/new_corepop target/pop/corepop

(above replace 'target' by configured value).  After that
do

  make
  make buildclean


