TEACH QUICKVED                                    Jeremy Wyatt  Jan 1998
                                          Updated Aaron Sloman  Oct 1998
                                                     Updated 3 Nov 2011


This file gives  a compact introduction  to the essentials  of VED,  the
Poplog text editor, and XVed its multi-window version.

-- INTRODUCTION -------------------------------------------------------

This file introduces only the basic commands you need in order to  start
editing and creating files, and running pop11 commands in the editor.

For a longer  introduction look at
    TEACH * TEACH,
    TEACH * VED,
    TEACH * SWITCHWINDOW,
    TEACH * BUFFERS,
and TEACH * MARK.

Some parts of this file assume that  you are using Ved or XVED and  also
the the  Poplog  "menu"  system.  For this  you  must  be  using either
a linux/unix system with a graphical interface, or else using a Windows
PC with Xming and PuTTY installed or using a virtual linux on a Windows
PC or mac, as described in

    http://www.cs.bham.ac.uk/research/projects/poplog/ova

If you are logged in remotely via SSH or PuTTY without the ability to
handle remote graphical commands (as provided by XMing) then you can
still use most of the commands below. However the <ENTER> menu commands,
will not work, and you will not have available any menu buttons.

That's a minor limitation, for now.

-- KEYBOARD REQUIRED --------------------------------------------------

It is also assumed  that you are  using a standard  UK PC keyboard  with
function keys F1 to F12 along the top, a key marked ENTER on the numeric
keypad (far right), and another key marked ENTER (which should be called
RETURN) just  below  the backspace  key.  In  VED those  two  keys  have
different functions, though the ENTER key on far right can be  simulated
by typing CTRL+g (hold CTRL down and tap the 'G' key).

Make sure  you  can  read  to  the end  of  the  next  paragraph  before
continuing. (use the 'Down' Arrow key to scroll down).

Try the ENTER key (or CTRL+g)  now. Your editor cursor (usually a  white
square on a  black background, or  black square on  a white  background,
depending on  your display  settings)  should jump  up to  the  editor's
'command'+'status' line, to the right of  the line number. You can  then
type a Unix/Linux command to show who is logged in:
    Type: 'unix who' then press 'RETURN'
The output will appear  in another editor window,  in a temporary  file,
that will not be saved.  You can quit that  window, while the editor  is
showing it by typing
    ENTER q RETURN
or  CTRL+g q RETURN

You have now  learnt that you  can move the  editor cursor around  using
arrow keys, that you can put it on the command line, that you can give a
linux command on the command line and see the output in the editor, that
you can quit a file by means of ENTER q

Now read on.

-- DISPLAY VED'S MENUS ------------------------------------------------

These menu commands assume you are running a linux system or have Xming
available or some other local X window display program. The menu
examples can be skipped if you are not in a position to use them.

If you have accessed this machine via an interface that allows graphical
interaction you can now turn on  Ved's 'Menu' mechanism, by giving  this
command using '<....>' to indicate using a special key.

    <ENTER> menu <RETURN>
or
    CTRL+g menu <RETURN>

That will display a vertical menu,  with label 'Toplevel'. Move it  to a
convenient location  using the  mouse  on the  'title bar'.  (It  should
appear near the bottom  right of your screen,  but that depends on  your
window manager.) You may wish to try clicking on some of the buttons  to
see what  happens,  before coming  back  here. Not  all  the  facilities
invoked by  menu  buttons  are  available on  all  machines.  E.g.  mail
transmission may or may not have been set up on this machine.

Words surrounded by the "<" and ">"  signs in this TEACH FILE and  other
poplog documentation  files  normally  refer  to  single  keys  on  your
keyboard, e.g. <ENTER> <RETURN> <F3> <PageUP> <DownArrow>. CTRL and  ESC
are sometimes also put in those  brackets: <CTRL> <ESC>. The files  were
produced by  different people  at  different times  and are  not  always
totally consistent.


-- READING THIS FILE ---------------------------------------------------

In addition to  small moves  using the arrow  keys you  can make  larger
jumps through  the file.  To move  up  and down  press the  <PageUp>  or
<PageDown> key  on your  keyboard. You  can also  use the  "PageUp"  and
"PageDown" buttons on the Toplevel menu (if you have it displayed).

If neither of those works, you  can try using the <ESC> button  followed
by the <UpArrow> or <DownArrow> keyboard keys to get medium sized  jumps
up or down.


-- WHAT ARE VED AND POPLOG? --------------------------------------------

VED is part of a powerful programming environment called Poplog.  Poplog
is based around an AI programming language called Pop-11, often  written
without the hyphen, and sometimes in lower case, "pop11" because that is
the command  used to  start  it. Poplog  also includes  other  languages
(Prolog, Common Lisp and Standard ML).

Pop-11 is  a language  that allows  you  to write  and test  complex  AI
programs relatively quickly. In order to write programs you need a  text
editor. VED is Poplog's text editor. It can be used to write, save,  and
modify programs. It can also be  used to produce documentation, such  as
the file you are now reading, and  also to read and send email  messages
and even to compose essays and reports. (There are text formatting
facilities, which you can learn about separately.)

You can also run the programs and debug them from within the editor.

For example, here's a tiny program to calculate a sum

    1+2+3+4+5+6+7+8+9 =>

put your editor cursor on that line and do <ESC> d. The result should be
printed in another window. Use <ESC> x to come back here, if necessary.

Here is another command to create a list and print it out. Use <ESC> d

    vars list; [a b] -> list; list =>

and now create a bigger list from that one and print it out (<ESC> d):

    list <> list <> list <> rev(list) <> rev(list) =>

See if you can work out what's going on. Rev takes in a list and creates
another with the same elements in reverse order.

Those few  examples illustrate  the way  the editor  interacts with  the
compiler: it can take a line (or more) or program text, from inside  the
text buffer, hand it to the pop11 compiler, which compiles and runs  the
program, after which any output is  displayed by the editor, by  default
in the 'output.p' file.

XVED is a version of VED that works with the X-window system. If you are
using a linux or  unix system, the X-window  system is the program  that
controls the graphical display you are now looking at, and allows you to
create multiple windows  and use  the mouse.  This can  be simulated  on
Microsoft Windows using the program XMing.

XVed gives more flexibility than Ved because you can have several text
buffers visible at the same time. However, even if XVed cannot be run
because you are not using XMing or a linux desktop, Ved can still handle
multiple files, and can show you up to two of them at a time, by
default. (It can be made to split its window into more than two
sections, but that will not be explained here.)

-- DOCUMENTATION FACILITIES -------------------------------------------
One important feature of Poplog is that it has an extensive on-line help
system. This file is called a TEACH  FILE. It and the other TEACH  FILES
and HELP  FILES explain  how to  write simple  programs in  Pop-11;  the
syntax of the language; and some  of the fundamental ideas in AI. Some
of them also explain how to use the editor.

TEACH files are  tutorial in style;  HELP files are  more advanced.  REF
files provide 'reference' documentation for experts. There are also  LIB
files containing program libraries which the editor can find and display
or compile. In this  teach file we'll  look at how to  open and use  the
online documentation facilties, and  how to create,  edit and save  your
own files.

Poplog was originally developed at Sussex University and for a while was
Marketed worldwide by Integral Solutions Ltd (ISL), who also used Poplog
to develop software for  use by customers,  including a very  successful
datamining package called Clementine. ISL were later bought by SPSS, who
were subsequently bought by IBM Clementine is now part of IBM's business
software. Pop-11 has  also been used  for research in  AI and  cognitive
science. If  you wish  to find  out more  about Poplog,  information  is
available at these internet sites:

    http://www.cs.bham.ac.uk/research/projects/poplog/freepoplog.html

    http://www.cs.bham.ac.uk/research/projects/poplog/isl-docs


-- WAYS OF MOVING ABOUT ------------------------------------------------

When you  use VED  (or XVED)  there  is always  a "current  line"  and a
"current location" within  the current  line. This  location is  usually
represented on  the screen  by the  "text cursor",  a rectangular  block
which moves if you press one of the arrow keys on your keyboard.

If you type something, e.g. "hello"  the characters will be inserted  at
the text cursor location.  If you press the  <DEL> or <BACKSPACE>  key a
character will be deleted to the left of where the text cursor is.

(For historical reasons, in Ved the delete and backspace key by  default
do the same thing.  Users can, however,  alter the functions  associated
with keys.)

There is also a mouse cursor, which  moves when you move the mouse.  Its
appearance is different in different contexts. If you are using XVED  it
may look like an 'I'  when it is in the  XVED window, otherwise a  small
arrow. In XVed the mouse cursor can be used to select text and to invoke
menus. In Ved everything has to be done using the keyboard keys, but the
same overall functionality is available.

While reading  or editing  text you  need to  move the  text cursor,  to
change the "current  location" in the  file. There are  lots of ways  of
moving the current  location. One of  the simplest is  to use the  arrow
keys on your keyboard. Try  using these to move  it about now. See  what
happens when you move far to the left or the right, or a long way up  or
down.

In XVed the second way  to move the current  editing location is to  use
the mouse. Move the mouse cursor to a point in this window and click the
left mouse button. The text cursor should jump to the same place as  the
mouse cursor. Note: the current  text cursor location changes ONLY  when
you click, not whenever you move the mouse.

Another way to move about if you are  using XVed is to use the mouse  on
the "scroll bar" normally at the right hand side of the window.

Yet another  is to  use the  PageUp  and PageDown  keys in  the  central
keypad. Some people who type quickly  like to keep their hands over  the
alphabetic part of the keypad. You can use CTRL-v to move down and ESC v
to move up, a window at a time.

Try several different ways of moving  the edit location about now.  Then
find your way back here!


-- THE COMMAND LINE ----------------------------------------------------

At the top of the current Ved window you will see a number and the  name
of this file. The number is the line  you are at in this file (i.e.  the
current line number). You can  see it change as  you move the cursor  up
and down the file. That line is  called the COMMAND LINE, since you  can
type commands there. It is also  sometimes called the STATUS line  since
it shows (some aspects of) the current state of the editor.

You can perform  all sorts  of useful  operations using  it the  command
line. To get the text cursor there you can click on it with your  mouse,
or press the  <ENTER> key  on your keyboard  -- usually  at the  extreme
right of the keyboard.  (Don't confuse it with  the <RETURN> key,  which
does other things.) If for some reason your ENTER key does not work  you
can use CTRL-g .

You can  also move  round the  file by  typing in  line numbers  to  the
command line. First memorise the current line number. Now type in a  new
number, then press the <RETURN> key. e.g.

    <ENTER> 200 <RETURN>

Use the same mechanism to come back here. If you mistakenly hit  <ENTER>
and want to  leave the  command line,  press the  + key  on the  numeric
keypad to the far right of  your keyboard. Notice what happens when  you
press that key repeatedly. It is called the STATUSSWITCH key in VED. If
you don't have a numeric keypad you can get the same effect by using the
combination <ESC> followed by CTRL-g.


-- CREATING A NEW FILE OF YOUR OWN ------------------------------------

How can you open a file  of your own to write  in? The answer is to  use
the command line. Don't carry out the following instructions right away.
Wait until you reach the end of this section.

Go to the command  line, and type  VED MYNOTES. You  should not type  in
capital letters. They have simply been used to distinguish the  commands
you must use from the rest of the  text. If you make a mistake then  use
the <DELETE> or <BACKSPACE> keys to correct it. The <BACKSPACE> key  may
be marked as a lefthand arrow  <--.

When you have finished typing the  "ved mynotes" command on the  command
line, press the <RETURN> key to tell VED that the command is ready to be
obeyed. Then another XVED  or VED window will  appear. It will be  empty
(unless you had previously created a file called 'mynotes').

You should see the characters '(EDITING: mynotes)' on the command  line.
To come back to this  Teach file go to the  command line in that  window
and give the "<ENTER> teach quickved" command.

Or use <ESC>  x to  swap back  to the  previous file  you were  editing.
Although VED can have many files in its buffers, not all need be visible
on the screen.

You can call up any TEACH file in the entire Poplog system by typing  on
the command line "teach" followed by the filename then <RETURN>, e.g.

    <ENTER> teach buffers <RETURN>

You can open your own files (or  create new ones) for editing by  typing
"ved" followed by the filename on the command line.

    <ENTER> ved myfile.p <RETURN>

(If you end a file name with '.p' Ved will treat it as a pop11 file.

-- SWITCHING BETWEEN WINDOWS USING THE MOUSE --------------------------

If using XVed, you can switch between existing windows using the  mouse.
If the window you want  is fully visible, just  move the mouse into  it.
You can then type in the window (unless your window manager has been set
to "click to change focus").

If the window  is partly  covered you  can bring  it to  the "front"  by
clicking on the title bar. The title bar is a horizontal bar at the  top
of the  window which  includes the  name of  the window  and maybe  some
icons. It will change colour as you move the mouse cursor in and out  of
the window. Precise behaviour  will depend on  which Window Manager  you
are using.

Move the mouse to  the title bar at  the top of the  window you want  to
use, and click on that bar with  the LEFT mouse button. It will come  to
the "front". Experiment with left button clicks on title bars of various
windows to see what happens.

(NB: whether all  this works as  described will depend  on which  window
manager you are using  and how it  has been set up.  If you change  your
window manager things will work differently.)

You can  also switch  between  Ved windows  by  tapping the  <ESC>  key,
letting go,  and  typing X.  Normally  this command  sequence  would  be
written <ESC> x or ESC x. (This invokes VED's SWAPFILES function,  which
enables you to switch back and forth between the last two VED windows.

(NB do NOT  try hitting  the two keys  <ESC> and  X simultaneously.  The
<ESC> key sends a separate signal to the computer which must be received
first. It  is not  like the  <SHIFT> and  <CONTROL> keys  which send  no
separate signal but modify the signals sent by other keys.)

-- MOVING AND RESIZING WINDOWS ----------------------------------------

VED windows (and others) take up a lot of space, so switching between
them can be awkward if you wish to be able to see both windows at the
same time.

If using XVed you can resize windows and move them using the mouse.
Exactly how to do that depends on the window manager and how it has been
set up. If you are not using XVed but you are using an xterm window,
then you can tell VED to check the current size of the window by typing
CTRL-L which is equivalent to <ENTER> vedxrefresh <RETURN>

This file used to  include information on  moving and resizing  windows,
but there  are now  so many  different window  managers, with  different
behaviours, that there's no point giving instructions here.

If using XVed try resizing your VED windows and moving them and the MENU
panel until you can easily see and switch between them all.

-- EDITING AND SAVING FILES --------------------------------------------

Now you can start to edit your file. Switch to the window containing
your file called 'mynotes', and type some text.

You should write a brief summary of  what you have learned about how  to
use VED  and the  window manager.  This will  help you  review what  you
already know. You can  use the <DELETE> or  <BACKSPACE> keys to  correct
typing mistakes.

You may find it useful to include notes on how to start a new file in
VED, how to give VED commands, how to move the VED text cursor, how to
move or resize a window. If you're confused or have questions about any
of this, now is a good time to ask. You can compare your notes with
those written by other students.

-- SAVING YOUR FILE ---------------------------------------------------

How can you "save" your file so that it is stored on a hard disk?

Go to the command line (press <ENTER>), type W (lower case) and press
<RETURN>. The <ENTER> w command tells VED to "write" all your files
to the magnetic disk where they will be saved until you next need them.

Now  let's  "quit"  the  file:  type  <ENTER>  q  <RETURN>.  The  window
containing 'mynotes' will  disappear, and  the text cursor  will end  up
back in this window.

To view your file  once more give the  command "<ENTER> ved mynotes"  as
previously. If you make some changes and then try to quit without saving
first, VED will ask you if you would like to save the changes you  made.
You should select the "save" option so that you don't lose work.

Remember that if you quit a file  without saving you will lose all  your
changes. It  is sensible  to  save your  files  whenever you  have  made
significant changes, about every 15 minutes is a good guide.

Depending  on  the  operating  system   you  are  using  there  may   be
restrictions on the filenames you  can use. A good  rule of thumb is  to
use only  alphabetic  and  numeric characters  and  the  '_'  underscore
character. Do not try  using punctuation characters,  spaces, or "*"  or
"?" in a file name.

(If you use spaces in file names on a unix system that can cause serious
problems later on because unix commands use spaces as delimiters.)

If you create a Pop-11 program  file as described below, make sure  that
its name ends in '.p', as in 'myfile.p'. That will tell VED to treat the
file as containing Pop-11,  rather than just plain  text. But don't  use
the '.p' suffix  for files that  are not program  files, since then  VED
will not format them nicely for you.


-- MARKING TEXT --------------------------------------------------------

VED allows you  to manipulate  sections of  text as  well as  individual
characters. To  perform any  operation on  a section  of text  you  must
select it. To do this  you need to use the  row of function keys at  the
top of the keyboard. These are marked <F1>, <F2>, <F3> etc. If you don't
have such function keys on your keyboard you will need to ask for  help.
You may find that other keys will do, or you may be able to get by using
VED's Menu panels.

If you wish to mark a range  of text, prior to copying it, deleting  it,
formatting it, or compiling it you must first decide which is the  first
(top) line of the range. Move the text cursor onto that line then  press
the <F1> function key. A vertical line will appear next to this line  on
the left hand side of  the window. If you are  using a colour screen  it
will be red.

Now move the text cursor  down to the last line  in the range and  press
<F2>. and you  will see  the line  on the left  extend to  the line  the
cursor is now on. This is called marking a range. The lines of text  you
have marked are called the MARKED RANGE.

Try marking one of the visible  paragraphs in the file you are  reading.
Then extend the range to include a paragraph above it. (You will need to
use the UpArrow key and <F1>. Then extend the range down to include  the
next paragraph  after  the  marked  range. You  will  have  to  use  the
DownArrow key and <F2>.

Another way to mark a range in XVED  is to use the mouse cursor and  the
Control key on the  keyboard. Move the  mouse cursor to  the top of  the
previous paragraph. Then  press the  Control key, and  while holding  it
down "drag" the mouse cursor holding button 1 down. The red mark on  the
left will appear  as soon as  you move the  cursor. Release the  buttons
when you have finished.

But how can you perform useful operations with this marked range?

First of all let's copy  some text within the  same window. Mark one  of
the paragraphs visible above,  then move the text  cursor cursor to  the
empty space below this paragraph and press <F9>.





The entire marked range  will be copied to  that space. Notice that  the
line on the left  showing which range  is marked stays  where it is.  An
alternative to  pressing the  <F9> key,  which will  work even  if  your
keyboard has not been set  up correctly is to  give the VED "<ENTER>  t"
command. ("t" is short for "transcribe").

You can also move a marked range around. This time mark the copied text,
and move the cursor below this  paragraph. Now press <F8>. The block  of
text will move. If the F8 does not have the desired effect you can  give
the "<ENTER> m" command to  move text. The line  on the left moves  with
the marked text.



You can delete a marked range by giving the <ENTER> d command.
Try that now and the marked paragraph will disappear. If you
accidentally delete a range you can retrieve it using the command
<ENTER> y, where "y" stands for "Yanking" the deleted text back into the
file.

Finally you can unmark a marked range with  <ENTER> crm. This is short
for "Clear Range Mark"). You may wish to clear the range mark to prevent
unwanted deletion, copying or moving. You can read about marking ranges
in more detail in TEACH * MARK. There is a summary available in the file
HELP * MARK. To read it give the command <ENTER> help mark. There is
also a "marking" menu available via the "toplevel" menu panel.

Incidentally, don't worry about any changes you make to this file. All
Teach files are "write protected". This Teach file doesn't change on
disk when you change your on screen copy of it, and you cannot save your
changes to a Teach or Help file, unless you first rename the file to
make it one of yours. You'll learn how to do that later.

-- COMPILING A MARKED RANGE -------------------------------------------

The editor  is  part  of  the  poplog system  and  has  the  ability  to
communicate with the  pop11 compiler  (and other  poplog compilers),  as
illustrated briefly above.

Here is  a Pop11  command to  multiply  two numbers  and print  out  the
result.

    99 * 9 =>

Using what you have learnt above, mark that line (using F1 and/or F2).

You can give the 'Load Marked Range' command to ved by doing

    <ENTER> lmr

That should start up a new editor buffer called 'output.p' and print
this into it:

    ** 891

A slightly faster method to load (compile) a marked range is to use
<CTRL> D instead of the lmr command.

Try marking the next two lines, then type the CTRL d command:

    [This is a list containing words and
        3 4 5 6 99 some numbers] =>

That should print the whole list in the output.p file.

The LMR and CTRL-d commands assume you have already marked a range.

You can give a single pop11 command, expressed on one line, by moving
the cursor onto that line, and typing <ESC> d (I.e. press and release
the ESC key then tap on the D key).

Try it with each of these lines:

    sqrt(100) =>

    rev( [a list can be reversed] ) =>

    length( [a list can be reversed] ) =>

    islist( [a list can be reversed] ) =>

    isnumber( [a list can be reversed] ) =>

    sqrt( [a list can be reversed] ) =>

The last one should produce an error message beginning:

    ;;; MISHAP - NUMBER NEEDED

Try varying the above pop11 commands and using ESC d on the new
versions.

Also try it on this one:

    vars x; [% for x from 1 to 20 do x endfor %] =>

and

    vars x; [% for x from 1 to 20 do sqrt(x) endfor %] =>

The first creates and prints out a list of numbers from 1 to 20. The
second computes their square roots and puts them in a list, which is
printed out.

Try varying those commands.

The use of marked ranges in programming will become increasingly
important as your programming skills develop.

You can quit the output file by going into it by typing these two keys:

    <ESC> x

and then quit by doing

    <ENTER> q <RETURN>

or, more briefly

    <ESC> q

It will ask if you really want to quit. Type 'y'. Otherwise it will save
the file onto a hard drive before quitting.


-- COPYING RANGES BETWEEN FILES ----------------------------------------

It may be useful sometimes to copy  a portion of a teach file into  your
own program file where you can  then edit it. This section explains  the
techniques involved,  in cases  where  you are  using two  VED  buffers.
Depending on the interface  you are using  you may also  be able to  use
more  familiar  mechanisms  using  a  mouse  with  'copy'  and   'paste'
mechanisms.

Before proceeding, make sure you have a file called 'mynotes' which has
been opened in VED as described above. Move the text cursor to the end
of that file (e.g. using the <End> function key or the "<ENTER> @z"
command. Then come back to this file.

We've just seen how to copy or move a marked range between different
parts of the same file. It is often useful to be able to copy text
blocks from one file to another. How can you do this? Simply mark a
paragraph in this file, then switch to the other window using <ESC> x.
That should take you to your file mynotes.

To copy (or "transcribe") the marked range from the teach file into
the mynotes file, First move the text cursor to where you want the text
to appear, then give the command "ENTER ti". (Transcribe In). This will
copy (transcribe) the marked range from the previous file to the current
file. (A slightly quicker alternative is to use the key sequence
    <ESC> <F9>

You can also MOVE text between windows. Mark a new block in 'mynotes',
and switch back to this file. Then give the command "<ENTER> mi"
(where "mi" stands for "Move In"). That will move the marked range from
the previous file to the current file. Alternatively you can use the key
sequence: <ESC> <f8>

(The <F8> and <F9> keys will work on terminals set up in the school of
computer science in Birmingham. Terminals elsewhere may work
differently.)

When you use the <ENTER> mi, or <ESC> <F8>, command you should see the
block of text disappear from one file and reappear wherever the cursor
is in the other file. Now mark the moved block and delete it. You may
want to practice this several times.

-- JUSTIFYING TEXT -----------------------------------------------------

When you make lots of changes to a piece of text, it often becomes
untidy. To make it flow neatly down the page you can try the key
sequence <ESC> j. This will "justify" the paragraph that the cursor is
currently in. Try it out on the paragraph below.

This paragraph is very untidy.
The lines
of text sometimes
finish halfway
across the screen. But the <ESC> j key sequence
will
justify it. However it will not be exactly
right-justified with lines exactly the same length
as that
would require inserting some extra
spaces. I.e. it will be justified with "ragged right"
format.


-- FORMATTING POP11 CODE ----------------------------------------------


-- LOGGING OUT ---------------------------------------------------------

Before logging out you should make sure you finish your XVED session.

You will want to save  all the files you  have created and leave  Poplog
altogether. You  can  perform both  these  functions with  one  command:
<ENTER> bye. If you have  any changed files that  will save them on  the
disk. (Though not TEACH files.)

Try leaving Poplog like that now, and then restart using the VED or XVED
unix command followed by <ENTER> teach quickved.

You will then need to reopen your notes file 'mynotes' from the command
line. Remove any junk from that file and add to the notes a summary of
how to mark ranges, move or copy them, and delete them.

If you have been working on a program file you can open it the same way,
e.g. giving the linux command

    ved myfile.p

or, if XVed is available,

    xved myfile.p

-- SUMMARY -------------------------------------------------------------

You have now met a number of VED commands and key sequences:

    Four arrow keys  (Up Down Left Right)
    <PageUp>
    <PageDown>
    <ENTER> q   (or <ESC> q)
    <ENTER> w
    <ESC> x
    <ESC> j
    <ENTER> bye
    <F8>        (or <ENTER> m)
    <F9>        (or <ENTER> t)
    <ESC> <F8>  (or <ENTER> mi)
    <ESC> <F9>  (or <ENTER> ti)
    <Delete>
    <Backspace>
    <F1>
    <F2>
    <ENTER> ved 'filename'
    <ENTER> teach 'filename'
    <ENTER> d
    <ENTER> crm
    <ENTER> y

Copy this list into your file mynotes and write a one line explanation
for each one. You have also seen how to use the mouse to

    move the text cursor
    use the menu
    use the scrollbar

Finally you have learned the following skills

    on-line TEACH and HELP files
    creating, editing and saving your own files to disk
    moving around and between windows
    marking ranges
    moving, deleting, and copying marked ranges
    how to use the command line

Make sure that you understand and practice these by writing a summary in
your file 'mynotes' before moving on.

-- MOVING A WORD (OR TEXT ITEM) AT A TIME -----------------------------

Although you now know  several ways of moving  around there are  several
other useful shortcuts.  You can move  word by word  across the  screen.
<ESC> F moves the cursor to the right, and <ESC> B moves to the left, in
both cases a word at a time.

You can also move to the beginning  and end of a line of text.  <CTRL> A
moves to the beginning of a line of text, and <CRTL> E to the end.

-- USING THE TABLE OF CONTENTS IN A DOCUMENTATION FILE ----------------

Another really useful way of moving around is to use tables of contents
provided in TEACH files. First you can do this using Ved commands that
work with both ordinary Ved and XVed.

To go to the  table of contents  for the file you  are reading give  the
command <ENTER> g <RETURN> (use lower case "g", for GO).

This may take you to a portion of the file that looks like this, but not
indented so much.

      -- INTRODUCTION
      -- KEYBOARD REQUIRED
      -- DISPLAY VED'S MENUS
      -- READING THIS FILE
      -- WHAT ARE VED AND POPLOG?
      -- DOCUMENTATION FACILITIES
      etc
      etc

You can select a section by moving the editor cursor up or down. When
you have selected a section e.g.

      -- USING THE TABLE OF CONTENTS IN A DOCUMENTATION FILE

Put the editor cursor on the item, and repeate the <ENTER> g command.

If you use the command repeatedly, it keeps taking you to the next
section.

Summary:

If the Ved cursor is not on the index, ENTER g takes you to the index.
If it is on the index it takes you to the section with the header you
have selected.

If your display allows you  to use the Menu  mechanism, you can use  the
mouse to click  on the "GoSection"  button in the  menu. Then place  the
cursor on the line of  the topic you would like  to jump to. Then  click
again on GoSection. The cursor will automatically jump to that  section.
You can jump back to  the table of contents at  any time by clicking  on
GoSection. Try doing this now.

Some people prefer to do everything using ony the Keyboard, without
touching the mouse. For that reason such people are willing to memorise
commands Others prefer the mouse and menu interface, which relies less
on memory.

-- JUMPING BETWEEN BUFFERS ---------------------------------------------

Ved/XVed allows you  to have two  windows with separate  files shown  in
them. But you might  open many more  files than that.  When you open  an
file it is placed in what is called  a buffer. A buffer is just a  piece
of memory that stores the text, and  the changes you make to that  text.
Each window can displays the contents of one buffer. So you can  display
the contents of up to two buffers  at once. When you type <ENTER> W  you
save the contents of all the current buffers to disk; and when you  type
<ENTER> Q you close a buffer, so that the only version of that file left
is the one on disk.

-- USING ESC e TO SELECT A BUFFER -------------------------------------

You may of course have many buffers open, but using <ESC> X you can only
jump between  the buffers  currently visible  in your  two windows.  The
other buffers are  hidden. To view  a list of  the other opened  buffers
type <ESC> E.  This  will give  a numbered  list of  buffers with  their
associated filenames.  To  go a  buffer  simply type  the  corresponding
number. You can do this even if you only have two buffers open. Try this
now.

-- SUMMARY -------------------------------------------------------------

This Teach file  has given a  very brief  overview of some  of the  most
commonly used commands required to  perform simple editing, and to  test
short programming commands,  in Ved/XVED  . To help  remember these  you
should complete  your summary  in 'mynotes'  before moving  on to  other
Teach files that tell you about Pop-11.

-- INTRODUCTORY TEACH FILES --------------------------------------------

This Teach File  covers only the  rudiments of VED, leaving out many
details.

There is a lot more information in the following files.

    TEACH * ESSENTIALKEYS
        Getting by if your function keys are not all usable.
        How to use normal printing keys plus CTRL and ESC to
        do everything.

    TEACH * MINIVED
        Reminder of basic Ved operations (using function keys where
        appropriate)

    TEACH * TEACH
        A longer tutorial introduction to text editing in VED
    TEACH * RHYME
        Gives you practice with VED - unscrambling a scrambled poem.
    TEACH * VED
        More information and practice on creating your own files
    TEACH * SWITCHWINDOW
        Revision on the use of "ESC x" to switch between files
    TEACH * BUFFERS
        How to deal with several different files at once.
    TEACH * MARK
        Revision on the use of marked ranges in a file.
    TEACH * INDEX
        Takes you to a possibly incomplete list of teach files.

    TEACH * RIVER
        For absolute beginner programmers: provides an introduction to
        programming via a familiar river crossing puzzle.

    TEACH * RESPOND
        Provides an introduction to developing a simple Chatbot in Pop11
    TEACH * ARITH
        Proves that Pop11 can handle numbers, like most other
        programming languages.

    TEACH * GSTART
        For use if you have graphical facilities available. Shows how to
        use pop11 programming commands usign the RC_GRAPHIC (Relative
        Coordinate Graphic) system to make pictures. It's also a good
        way to learn some geometry/

    TEACH

    TEACH * POPCORE
        A summary of some of the most commonly used Pop11 programming
        constructs

    TEACH * PRIMER
        A lengthy introduction to a large subset of Pop11, including
        examples you can run in the editor. There is also a printable
        PDF version and an online version
        http://www.cs.bham.ac.uk/research/projects/poplog/primer/

Note: In VED's online documentation you will often see an asterisk after
a word like TEACH or HELP. If the VED text cursor is higher up you can
use the key sequence <ESC> n to move it to the NEXT asterisk. Then to
get the help or teach file into VED use <ESC h>. This can be quicker
than typing a full help or teach command.


-- WHAT TO READ NEXT ---------------------------------------------------

You should now move on to the Teach files which introduce the most basic
ideas of programming in Pop-11. Your course tutor may suggest one or
more of these.

    TEACH * FACES
        A very rapid introduction to graphics programming in Pop-11
        using Ved as a development environment. Make some smiling and
        sad faces.
    TEACH * LMR
        How to mark and compile part of a Pop-11 program file. It
        explains some of the types of error messages that can occur and
        how to learn from them.
    TEACH * VEDPOP
        More practice with basic Pop-11 instructions in the VED
        environment.
    TEACH * VEDPROC
        A sequel to TEACH * VEDPOP, showing how to define Pop-11
        procedures in VED.

    HELP * VEDNOTES
        A summary of the most frequently used subset of VED commands.

    HELP * XTERMKEYS
        Maps of the keyboard function keys, showing what they do in
        VED and XVED

    HELP * VEDKEYS
        A reminder of most of the things that can be done in VED using
        key sequences.

For more advanced users only:

    TEACH * TEACHFILES
        - overview of TEACH documentation in the Poplog system
    TEACH * LOCALINDEX
        - List of teach files available in this department.
    HELP  * HELPFILES
        - overview of HELP documentation
    HELP * LOCALINDEX
        - List of help files available in this department.
    TEACH * PRIMER
        - A lengthy overview of the main features of Pop-11. A printed
          version of this can be bought from the librarian in the School
          of Computer Science at the University of Birmingham.

-- TABLE OF CONTENTS ---------------------------------------------------

CONTENTS
========

This table of contents is at the end of the file. The contents list can
appear anywhere in a file. In some teach and help files the table is
near the top of the file.

To go to a section move the text cursor to the line in the table of
contents and give the command <ENTER> g,

Alternatively you can bring up VED's Toplevel menu if it is not already
visible, using the command <ENTER> menu, and then on the GoSection
button in the menu panel.

If the text cursor is not already in the table of contents the above
commands will make it jump to the table of contents and select the line
after the last one on which you gave the "g" command.

 -- INTRODUCTION
 -- KEYBOARD REQUIRED
 -- DISPLAY VED'S MENUS
 -- READING THIS FILE
 -- WHAT ARE VED AND POPLOG?
 -- DOCUMENTATION FACILITIES
 -- WAYS OF MOVING ABOUT
 -- THE COMMAND LINE
 -- CREATING A NEW FILE OF YOUR OWN
 -- SWITCHING BETWEEN WINDOWS USING THE MOUSE
 -- MOVING AND RESIZING WINDOWS
 -- EDITING AND SAVING FILES
 -- SAVING YOUR FILE
 -- MARKING TEXT
 -- COMPILING A MARKED RANGE
 -- COPYING RANGES BETWEEN FILES
 -- JUSTIFYING TEXT
 -- FORMATTING POP11 CODE
 -- LOGGING OUT
 -- SUMMARY
 -- MOVING A WORD (OR TEXT ITEM) AT A TIME
 -- USING THE TABLE OF CONTENTS IN A DOCUMENTATION FILE
 -- JUMPING BETWEEN BUFFERS
 -- USING ESC e TO SELECT A BUFFER
 -- SUMMARY
 -- INTRODUCTORY TEACH FILES
 -- WHAT TO READ NEXT
 -- TABLE OF CONTENTS

--- $usepop/pop/teach/quickved
--- Copyright University of Birmingham 2011. All rights reserved. ------
