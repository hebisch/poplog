HELP VEDCOMMANDS                           updated Aaron Sloman Oct 1990

Typing in and invoking VED <ENTER> commands

CONTENTS - (Use <ENTER> g to access required sections)

 -- Introduction
 -- The command line buffer: vedstatusbufferlimit
 -- The <ENTER> key
 -- STATUSSWITCH key (sometimes called CHANGE MODE key)
 -- Executing or re-doing commands
 -- Getting back to old commands
 -- Marking, obeying, copying ranges
 -- See also

-- Introduction -------------------------------------------------------

ENTER commands are executed by typing them on the command line
(sometimes referred to as the status line) and then pressing <RETURN>,
which invokes the procedure -veddocommand-. For more details of command
line processing, and a list of <ENTER> commands see REF * VEDCOMMS


-- The command line buffer: vedstatusbufferlimit ----------------------

The VED command line mechanism provides a way of remembering your VED
commands so that they can be redone, possibly after editing.

The VED command line (or status line) is a 1-line window into a file of
commands. This means that the command line can be edited like any other
line in a file, and that cursor movements made on the command line cause
the position in the command file to change.

When the file exceeds -vedstatusbufferlimit- lines, it is truncated: the
oldest commands are deleted first. The default value is 60, but if you
wish to be able to remember up to the last 200 VED commands do

    200 -> vedstatusbufferlimit

in your vedinit.p file.


-- The <ENTER> key ----------------------------------------------------

If the cursor is not on the command line, then <ENTER> puts it there and
goes to the end of the file of commands.

When the cursor is on the command line, <ENTER> is equivalent to
END-OF-FILE, i.e. the blank line at the end becomes the current
position, except that if this makes the command file longer than lines,
the top line is deleted.

See also REF * VEDPROCS/vedenter


-- STATUSSWITCH key (sometimes called CHANGE MODE key) ----------------

The STATUSSWITCH key, often set either to CTRL-G or <ESC> CTRL-G, moves
the cursor onto the command line if it is not on it, and back into the
normal VED window otherwise. Neither move alters the command file or the
command line. The cursor goes back to where it was in the other file.
The value of the variable -vedonstatus- informs programs whether the
cursor is on the command line or not.

For more details see REF * VEDPROCS/vedstatusswitch


-- Executing or re-doing commands -------------------------------------

A line in the command file can be executed by keying RETURN with the
cursor anywhere on the line.

So a command which is visible can be re-done by pressing the
STATUSSWITCH key, then RETURN. However, the REDOCOMMAND key is simpler
when a command is to be re-done without any editing.


-- Getting back to old commands ---------------------------------------

An earlier command that is no longer visible can be obeyed by pressing
STATUSSWITCH to put the cursor on the status line, then using the usual
CHARUP key to move the cursor up a file, then pressing RETURN when the
appropriate line is in the window. The line may be edited first if
necessary. When an old command is re-executed (possibly after editing)
it is copied to the last line of the command line buffer.

There is only one command file for all files being edited, so on
switching VED files the current command position is retained.


-- Marking, obeying, copying ranges -----------------------------------

It is also possible to obey a marked range of commands in the command
file by typing Ctrl-D whilst the cursor is on the command line. The
normal keys for marking a range may be used together with keys for
moving up or down the file. See HELP * MARK.

It is possible to move ranges between the command file and the users
current file. For example there is a library command <ENTER> YANKC to
copy the marked range from the ordinary window into the command file. It
is defined as follows.

    define ved_yankc();
        dlocal vveddump, ved_on_status = false;
        ved_copy();
        true -> ved_on_status;
        ved_y();
    enddefine;

Note that the active variable VED_ON_STATUS is true when the cursor is
on the status line, or command line. Assigning to it switches between
the command line and the ordinary VED file.


-- See also -----------------------------------------------------------

REF * VEDCOMMS
REF * VEDPROCS
REF * VEDVARS


--- C.all/help/vedcommands ---------------------------------------------
--- Copyright University of Sussex 1990. All rights reserved. ----------
