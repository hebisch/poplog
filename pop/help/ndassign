HELP NDASSIGN                                       Steven Hardy, March 1982

The non destructive assignment arrow, ->>, behaves like the assignment arrow
(see HELP *ASSIGN) except that it does NOT remove the item from the top of
the stack. The following is a typical example of its use:

    0 ->> x ->> y -> z;

This sets X, Y and Z all to be zero.

Be cautious using the non destructive assignment arrow with AND and OR. It
binds less tightly than these so that

    foo() ->> x or baz() ->> x;

means

    (foo() ->> x or baz()) ->> x;

and NOT:

    (foo() ->> x) or (baz() ->> x);

See also HELP
    *ASSIGN  - on the use of the POP-11 assignment arrow ->
    *EXPRASS - expressions and assignments in POP-11
