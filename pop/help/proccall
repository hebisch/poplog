HELP PROCCALL                                               CSM & AS Jan 1983

CALLING PROCEDURES

        * APPLY
        * CALLER
        * CHAIN
        * CHAINTO
        * CHAINFROM
        * EXITFROM
        * EXITTO
        * INFIX
        * JUMPOUT
        * MACRO
        * MACROS
        * OPERATION
        * POPVAL
        * RECURSION
        * RETURN
        * TRACE
        * UNTRACEALL
        * UPDATER

See also
        * CONTROL   for an overview


The standard way to CALL a procedure (i.e. make it run) is to write its name
before parentheses, with any inputs (arguments) written between the
procedures. E.g.
        READLINE()
        GETLINE('PLEASE TYPE SOMETHING').
        CONS("A", [B C D])

Alternatively, the arguments, if any, can be written first, separated by
commas if there are two or more, then a dot, then the procedure name, E.g.
        .READLINE
        'PLEASE TYPE SOMETHING'.GETLINE
        "A", [B C D].CONS

Some procedure names are recognised as permitting the use of an 'infix'
notation without the use of parentheses or the dot, e.g.
        3 + 5
        66 * 6
        "A" :: [B C D]
        LIST MATCHES PATTERN.

For more on infix procedure names see * OPERATION, * INFIX
