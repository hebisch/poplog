HELP PRESENT                        updated Mark Rubinstein  October 1985

This procedure takes one argument, a pattern, and looks through the list in
the global variable *DATABASE to see whether the pattern matches
anything in the database. If so, the result of PRESENT is <TRUE> and the
first item which is found is assigned to the global variable IT. If no
matching item is found, the result is <FALSE>.

PRESENT could be defined something like this:

    define present(pattern);
        vars item;
        for item in database do
            if item matches pattern
            then item -> it;
                return(true);
            endif
        endfor;
        return(false);
    enddefine;

See also HELP *PRESENT, *MATCH, *IT, *ISIN, *LOOKUP, *REMOVE, *FLUSH,
    *ADD, *MATCHES, *FOREACH, *ALLPRESENT.

--- C.all/help/present -------------------------------------------------
--- Copyright University of Sussex 1987. All rights reserved. ----------
