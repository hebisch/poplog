PLOGHELP PREDICATES                        Kathryn Seifert  October 1986

An index of Prolog built in predicates


CONTENTS - (Use <ENTER> g to access sections)

 -- INTRODUCTION
 -- A
 -- B
 -- C
 -- D
 -- E
 -- F
 -- G
 -- H
 -- I
 -- K
 -- L
 -- M
 -- N
 -- O
 -- P
 -- Q
 -- R
 -- S
 -- T
 -- U
 -- V
 -- W
 -- SYMBOLS
 -- PROLOG_
 -- RELATED DOCUMENTATION


-- INTRODUCTION -------------------------------------------------------

This file lists the built in predicates, and gives pointers to the help
files where these are different from the predicate names.  The
predicates whose names are made up of symbols are also listed in
PLOGHELP * SYMBOLS.  The predicates whose names begin with "prolog_" are
non-standard and are listed at the end of this file. POP-11 procedures
to manipulate Prolog objects are also listed at the end of the file.
Otherwise, the predicates are in alphabetical order.

-- A ------------------------------------------------------------------

PLOGHELP * ABOLISH
 Predicate removing clauses with a given functor and arity from database
PLOGHELP * ABORT
 Predicate which aborts all current executions
PLOGHELP * ARG
 Predicate which determines the Nth argument of a given term
PLOGHELP * ASSERT
 Predicate to add a clause to the database.
PLOGHELP * ASSERTA
 Predicate to add clause to database before others with same predicate
PLOGHELP * ASSERTZ
 Predicate to add clause to database after others with same predicate.
PLOGHELP * ATOM
 Predicate which succeeds if its argument is an atom
PLOGHELP * ATOMIC
 Predicate which will succeed if its argument is a number or an atom

-- B ------------------------------------------------------------------

PLOGHELP * BAGOF
 Produces a bag of patterns which will satisfy a given goal
PLOGHELP * BREAK
 Predicate which calls new invocation of Prolog top-level

-- C ------------------------------------------------------------------

PLOGHELP * CALL
 Predicate whose argument is called as a goal
PLOGHELP * CLAUSE
 Predicate that succeeds if a clause with given body and head is in
 database
PLOGHELP * CLAUSES
 Operator which declares predicates as having a textual form
PLOGHELP * COMPARE
 Operators to perform metalogical comparisons on Prolog objects
PLOGHELP * CONSULT
 Predicate which reads clauses and goals from a file
PLOGHELP * CURRENT_ATOM
 Predicate which unifies its argument with an atom in Prolog dictionary
PLOGHELP * CURRENT_FUNCTOR
 Predicate whose args are a functor name and the most general term for
 that functor
PLOGHELP * CURRENT_OP
 Predicate whose arguments are the precedence, fix, and atom of a
 currently defined operator.
PLOGHELP * CURRENT_PREDICATE
 Predicate whose args are a predicate and the most general term for that
 predicate

-- D ------------------------------------------------------------------

PLOGHELP * DEBUGGING
 Predicate to list currently active spypoints
PLOGHELP * DISPLAY
 Predicate which writes argument to current output in prefix format
PLOGHELP * DIV
 Operator returning the integer result of the division of two integers
PLOGHELP * DYNAMIC
 Operator which declares predicates to be dynamic

-- E ------------------------------------------------------------------

PLOGHELP * ERROR
 Built-in predicate which causes an error
PLOGHELP * EXPAND_TERM
 Predicate to translate grammar rules into normal Prolog clauses

-- F ------------------------------------------------------------------

PLOGHELP * FAIL
 A predicate which always fails when called as a goal
PLOGHELP * FAST_BAGOF
 Fast version of 'bagof'
PLOGHELP * FAST_SETOF
 Fast version of 'setof'
PLOGHELP * FLOAT
 Predicate which tests whether its argument is a floating-point number
PLOGHELP * FUNCTOR
 Predicate whose arguments are unified with a term,its functor,and arity

-- G ------------------------------------------------------------------

PLOGHELP * GET
 Predicate; reads from current input and returns first printing character
PLOGHELP * GET0
 Predicate which reads the next character from the current input.

-- H ------------------------------------------------------------------

PLOGHELP * HALT
 Predicate which causes an exit from POPLOG

-- I ------------------------------------------------------------------

PLOGHELP * INCORE
 Predicate whose argument is called as a goal
PLOGHELP * INTEGER
 Predicate which tests whether its argument is an integer
PLOGHELP * IS
 Evaluating POP-11 and arithmetic expressions which return one result

-- K ------------------------------------------------------------------

PLOGHELP * KEYSORT
 Predicate for sorting lists of terms with an arity of two

-- L ------------------------------------------------------------------

PLOGHELP * LEASH
 Predicate to control SPY, so that user is prompted after each spypoint.
PLOGHELP * LENGTH
 Predicate which finds the length of a given list
PLOGHELP * LIBRARY
 How to access library files and how to add your own libraries
PLOGHELP * LISTING
 Predicates for writing clauses in the database to output file.

-- M ------------------------------------------------------------------

PLOGHELP * MOD
 Operator returning the remainder after the division of two integers

-- N ------------------------------------------------------------------

PLOGHELP * NAME
 Predicate which returns a list of the character codes making up an atom
PLOGHELP * NL
 Predicate which causes a newline to be printed in the current output.
PLOGHELP * NO_CLAUSES
 Operator which declares predicates to have no textual form
PLOGHELP * NODEBUG
 Predicate to remove all current spypoints.
PLOGHELP * NONVAR
 Predicate which succeeds as a goal if its argument is not a variable
PLOGHELP * NOSPY
 Predicate to remove spypoints from specified predicates.
PLOGHELP * NOT
 Operator and predicate which invert success and failure
PLOGHELP * NUMBERVARS
 Predicate which can be used to set how variables are written

-- O ------------------------------------------------------------------

PLOGHELP * OP
 How to declare operators

-- P ------------------------------------------------------------------

PLOGHELP * PHRASE
 Predicate for invoking goals involving grammar rules
PLOGHELP * PORTRAY
 Predicate which changes the action of the 'print' predicate.
PLOGHELP * PREDICATE_INFO
 Predicate which gives information about how predicates have been
 declared
PLOGHELP * PRINT
 Predicate which prints argument to current output.
PLOGHELP * PROMPT
 Predicate which changes the prompt used by 'read' and 'get0'.
PLOGHELP * PUT
 Predicate that takes character's ASCII code and outputs the character

-- Q ------------------------------------------------------------------

PLOGHELP * QUIETSPY
 Predicate to prevent SPY from printing out messages when spypoints are
 placed or removed.

-- R ------------------------------------------------------------------

PLOGHELP * READ
 Predicate which reads a term from the current input.
PLOGHELP * RECONSULT
 Predicate which reads clauses from file; supersedes existing clauses
PLOGHELP * REINITIALISE
 Predicate which forces Prolog startup behaviour
PLOGHELP * RENAME
 Predicate to rename files
PLOGHELP * REPEAT
 Predicate which succeeds infinitely many times on backtracking
PLOGHELP * RESTORE
 Predicate to restore a saved image
PLOGHELP * RETRACT
 Predicate to remove clauses matching a given pattern from database
PLOGHELP * RETRACTALL
 Predicate to remove clauses with a given head from database

-- S ------------------------------------------------------------------

PLOGHELP * SAVE
 Predicate to save the state of the Prolog system
PLOGHELP * SEE
 Predicate which changes current input stream.
PLOGHELP * SEEING
 Predicate which succeeds if given the name of the current input stream
PLOGHELP * SEEN
 Closes current input stream and switches to user's terminal.
PLOGHELP * SETOF
 Produces a set of patterns which will satisfy a given goal
PLOGHELP * SKIP
 Reads characters from input until a given character appears.
PLOGHELP * SORT
 Predicate for sorting lists
PLOGHELP * SPY
 Main predicates used to invoke and control the SPY package
PLOGHELP * STATIC
 Operator which declares predicates to be static
PLOGHELP * STATISTICS
 Predicate which prints information about current run of Prolog system
PLOGHELP * SYSTEM_PREDICATE
 Operator which declares predicates to be system predicates (constants)

-- T ------------------------------------------------------------------

PLOGHELP * TAB
 Predicate which prints a given number of spaces in current output.
PLOGHELP * TELL
 Predicate which switches current output stream.
PLOGHELP * TELLING
 Predicate which succeeds when given name of current output stream.
PLOGHELP * TOLD
 Closes current output stream and switches back to terminal.
PLOGHELP * TRIMCORE
 Predicate which causes a garbage collection
PLOGHELP * TRUE
 Predicate which always succeeds as a goal
PLOGHELP * TTYFLUSH
 Predicate which flushes the output buffer to the terminal.
PLOGHELP * TTYGET
 Reads characters from the terminal and returns first printing character.
PLOGHELP * TTYGET0
 Predicate which reads next character from the terminal.
PLOGHELP * TTYNL
 Predicate which prints a newline on the terminal
PLOGHELP * TTYPUT
 Takes ASCII code for a character and prints character to the terminal.
PLOGHELP * TTYSKIP
 Reads characters from terminal until a given character appears.
PLOGHELP * TTYTAB
 Predicate which prints a given number of spaces on the terminal.

-- U ------------------------------------------------------------------

PLOGHELP * UNLEASH
 Predicate to control SPY, so that user is not prompted after each
 spypoint.
PLOGHELP * USER_PREDICATE
 Operator which declares predicates to be user predicates (redefinable)

-- V ------------------------------------------------------------------

PLOGHELP * VAR
 Predicate which succeeds as a goal if its argument is a variable
PLOGHELP * VERSION
 Predicate used for displaying and adding to "version" information about
 the Prolog system

-- W ------------------------------------------------------------------

PLOGHELP * WRITE
 Predicate which writes a term to current output (not in prefix format)
PLOGHELP * WRITEQ
 Special form of 'write' predicate.

-- SYMBOLS ------------------------------------------------------------

See PLOGHELP * SYMBOLS for index to built-in words such as + - =..

-- PROLOG_ ------------------------------------------------------------

The following are HELP files devoted to Prolog system predicates, and to
POP-11 procedures which manipulate Prolog objects.


PLOGHELP * SYSTEM
 Predicates which affect the way the Prolog system operates
 Covers the following predicates:
    PROLOG_MEMLIM/2
    PROLOG_AREA_LIM/2
    PROLOG_MEMUSED/1
    PROLOG_GCRATIO/1
    PROLOG_GCTRACE/1
    PROLOG_LOCK_CODE/0
    PROLOG_UNLOCK_CODE/0
    PROLOG_NO_CLAUSES/0
    PROLOG_CLAUSES/0
    PROLOG_SYSPREDICATES/1
    PROLOG_SYSTEM_PREDICATE/2

PLOGHELP * TERMSINPOP
 POP-11 procedures for manipulating Prolog terms and variables
 Covers the following procedures:
    PROLOG_READTERM
    PROLOG_WRITETERM
    PROLOG_MAKETERM
    PROLOG_COMPLEXTERM
    PROLOG_FUNCTOR
    PROLOG_ARITY
    PROLOG_ARG
    PROLOG_ARG_ND
    PROLOG_ARGS
    PROLOG_ARGS_ND
    PROLOG_APPARGS
    PROLOG_APPARGS_ND
    PROLOG_DEREF
    PROLOG_UNDEFVAR
    PROLOG_FULL_DEREF
    PROLOG_VAR_NUMBER
    PROLOG_NEWVAR
    PROLOG_GENERALISE
    PROLOG_INSTANCE
    PROLOG_UNIFY
    PROLOG_UNIFYC

PLOGHELP * PROLOG_LANGUAGE
 Predicates and library package for switching from Prolog to POP-11
 This also covers prolog_current_language/1.

PLOGHELP * PROLOG_ERROR
 How to change the actions taken by the system when a mishap occurs
PLOGHELP * PROLOG_EVAL
 Evaluates the Prolog representation of a POP-11 expression
PLOGHELP * PROLOG_SETQ
 Reading and writing POP-11 variables from Prolog.
 This also covers the predicate prolog_val/2.
PLOGHELP * PROLOG_SYSERROR
 Predicate which causes an error and aborts to top level

PLOGHELP * PROLOG_BARRIER_APPLY
 POP-11 procedure which applies a procedure inside a Prolog 'barrier'
PLOGHELP * PROLOG_COMPILE
 POP-11 procedure which compiles a file of Prolog code
PLOGHELP * PROLOG_INVOKE
 POP-11 procedure which invokes a Prolog term
PLOGHELP * PROLOG_VALOF
 POP-11 procedure which returns current value of a Prolog predicate

-- RELATED DOCUMENTATION ----------------------------------------------

PLOGHELP * HELPFILES
 An overview of the contents of the Poplog Prolog HELP files

PLOGHELP * LIBRARIES
 Overview of Prolog library programs


--- C.all/plog/help/predicates -----------------------------------------
--- Copyright University of Sussex 1988. All rights reserved. ----------
