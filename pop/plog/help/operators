PLOGHELP OPERATORS                              Chris Mellish  June 1983
                                 Revised by Kathryn Seifert  August 1986

Operator declarations made when the Prolog system is loaded

Keywords: operators, precedences, system


CONTENTS - (Use <ENTER> g to access sections)

 -- INTRODUCTION
 -- PRECEDENCES OF STANDARD OPERATORS
 -- RELATED DOCUMENTATION


-- INTRODUCTION -------------------------------------------------------

The operator declarations made when the Prolog system is loaded are
listed below. The precedences declared for these operators are the same
as those used in PDP-11 Prolog; users more familiar with the DEC-10
standard should refer to PLOGHELP * DEC10 to see how the precedences can
be changed.

Any of these declarations may be overridden by a new declaration of the
same operator using the predicate 'op/3' (see PLOGHELP * OP for
details). You can use this to add your own operators too.

If you ever need to restore these standard operator precedences, you can
do so by loading LIBRARY * DEFAULT_OPS which simply redeclares everything
as below.


-- PRECEDENCES OF STANDARD OPERATORS ----------------------------------

HELP files associated with an operator are listed on the same line as
the operator declaration.

    :- op(255, xfx, ':-').
    :- op(255, fx, ':-').
    :- op(255, fx, '?-').
    :- op(255, xfx, '-->').             See PLOGHELP * ARROW

    :- op(254, xfy, ;).                 See PLOGHELP * SEMICOLON
    :- op(252, xfy, ',').               See PLOGHELP * COMMA

    :- op(254, fx, spy).                See PLOGHELP * SPY
    :- op(254, fx, nospy).              See PLOGHELP * NOSPY
    :- op(254, fx, system_predicate).   See PLOGHELP * SYSTEM_PREDICATE
    :- op(254, fx, user_predicate).     See PLOGHELP * USER_PREDICATE
    :- op(254, fx, dynamic).            See PLOGHELP * DYNAMIC
    :- op(254, fx, static).             See PLOGHELP * STATIC
    :- op(254, fx, no_clauses).         See PLOGHELP * NO_CLAUSES
    :- op(254, fx, clauses).            See PLOGHELP * CLAUSES

    :- op(253, xfy, ->).                See PLOGHELP * CONDITIONAL
    :- op(249, fy, \+ ).                See PLOGHELP * NOT
    :- op(40, xfx, =..).                See PLOGHELP * UNIV

    :- op(40, xfx, is).                 See PLOGHELP * IS
    :- op(40, xfx, <).                  See PLOGHELP * LESSTHAN
    :- op(40, xfx, >).                  See PLOGHELP * GREATERTHAN
    :- op(40, xfx, >=).                 See PLOGHELP * GREATERTHAN
    :- op(40, xfx, =<).                 See PLOGHELP * LESSTHAN
    :- op(31, yfx, -).                  See PLOGHELP * MINUS
    :- op(21, fx, -).                   See PLOGHELP * MINUS
    :- op(31, yfx, +).                  See PLOGHELP * PLUS
    :- op(21, yfx, *).                  See PLOGHELP * TIMES
    :- op(21, yfx, /).                  See PLOGHELP * DIVIDE
    :- op(21, yfx, div).                See PLOGHELP * DIV
    :- op(21, yfx, mod).                See PLOGHELP * MOD

    :- op(40, xfx, @<).                 See PLOGHELP * COMPARE
    :- op(40, xfx, @>).                 See PLOGHELP * COMPARE
    :- op(40, xfx, @=<).                See PLOGHELP * COMPARE
    :- op(40, xfx, @>=).                See PLOGHELP * COMPARE

    :- op(40, xfx, =:=).                See PLOGHELP * EQUAL
    :- op(40, xfx, =\=).                See PLOGHELP * EQUAL
    :- op(40, xfx, =).                  See PLOGHELP * EQUAL
    :- op(40, xfx, \=).                 See PLOGHELP * EQUAL
    :- op(40, xfx, ==).                 See PLOGHELP * EQUAL
    :- op(40, xfx, \==).                See PLOGHELP * EQUAL

    :- op(31, yfx, \/).                 See PLOGHELP * BITWISE
    :- op(31, yfx, /\).                 See PLOGHELP * BITWISE
    :- op(21, fx, \).                   See PLOGHELP * BITWISE
    :- op(21, yfx, >>).                 See PLOGHELP * BITWISE
    :- op(21, yfx, <<).                 See PLOGHELP * BITWISE

    :- op(10, xfy, ^).                  See PLOGHELP * SETOF


-- RELATED DOCUMENTATION ----------------------------------------------

PLOGHELP * ARITHMETIC
 Overview of HELP files dealing with operations on numbers

PLOGHELP * DEC10
 Library file to change operator precedences to those of DEC10 Prolog

PLOGHELP * DEFAULT_OPS
 How to restore operator precedences to their default values

PLOGHELP * OP
 How to declare operators

PLOGHELP * SYMBOLS
 Summary and index of HELP files for symbols used in Prolog

--- C.all/plog/help/operators ------------------------------------------
--- Copyright University of Sussex 1988. All rights reserved. ----------
