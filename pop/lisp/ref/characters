REF CHARACTERS                            Titch Le Bek, Rob Duncan, 1986

       COPYRIGHT University of Sussex 1993. All Rights Reserved.

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<                             >>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<  LISP CHARACTER OPERATIONS  >>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<                             >>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

This file  briefly  describes  the functions,  variables  and  constants
documented in Chapter 13  of the standard Common  Lisp guide, which  is:
Common Lisp: The Language (Guy L. Steele, Digital Press, 1984).


-------------------------------------------------
1  A Listing of Functions Variables and Constants
-------------------------------------------------

(alpha-char-p character)                                      [function]
        True if character is an alphabetic character; nil otherwise.


(alphanumericp character)                                     [function]
        True if character is an  alphabetic or a numeric character;  nil
        otherwise.


(both-case-p character)                                       [function]
        True if character  is an  uppercase character  with a  lowercase
        equivalent, or  is  a  lowercase  character  with  an  uppercase
        equivalent; nil otherwise.


(char-code character)                                         [function]
        Returns  the  code  attribute  of  character;  the  result  is a
        non-negative  integer  strictly  less  than  the  value  of  the
        constant char-code-limit.


char-code-limit                                               [constant]
        The upper exclusive  bound on  values produced  by the  function
        char-code. Value in this implementation: 256.


(char-downcase character)                                     [function]
        Convert character to its  lowercase equivalent, if such  exists.
        Otherwise returns character unchanged.


(char-equal character &rest characters)                       [function]
        Returns true  if  the  character  objects  are  all  equal;  nil
        otherwise. char-equal ignores character case.


(char-greaterp character &rest characters)                    [function]
        Returns true if the character objects are ordered in  descending
        precedence of position; nil otherwise. Ignores case.


(char-int character)                                          [function]
        Returns a  non-negative integer  encoding the  character  object
        character.  Provided  primarily  for  the  purpose  of   hashing
        characters.


(char-lessp character &rest characters)                       [function]
        Returns true if the character  objects are ordered in  ascending
        precedence of position; nil otherwise. Ignores case.


(char-name character)                                         [function]
        If character has a name then  that name (a string) is  returned.
        nil otherwise.


(char-not-equal character &rest characters)                   [function]
        Returns true  if  the  character  objects  are  not  equal;  nil
        otherwise. Ignores case.


(char-not-greaterp character &rest characters)                [function]
        Returns true if the character  objects are ordered in  ascending
        precedence of  position or  are  equal; nil  otherwise.  Ignores
        case.


(char-not-lessp character &rest characters)                   [function]
        Returns true if the character objects are ordered in  descending
        precedence of  position or  are  equal; nil  otherwise.  Ignores
        case.


(char-upcase character)                                       [function]
        Converts character to its uppercase equivalent, if such  exists.
        Otherwise returns character unchanged.


(char/= character &rest characters)                           [function]
        Returns true if  the character  objects are not  all equal;  nil
        otherwise.


(char< character &rest characters)                            [function]
        Returns true if the character  objects are ordered in  ascending
        precedence of position; nil otherwise.


(char<= character &rest characters)                           [function]
        Returns true if the character  objects are ordered in  ascending
        precedence of position or are equal; nil otherwise.


(char= character &rest  characters)                           [function]
        Returns true  if  the  character  object  args  are  equal;  nil
        otherwise.


(char> character &rest characters)                            [function]
        Returns true if the character objects are ordered in  descending
        precedence of position; nil otherwise.


(char>= character &rest characters)                           [function]
        Returns true if the character objects are ordered in  descending
        precedence of position or are equal; nil otherwise.


(character object)                                            [function]
        character coerces object to a character if possible.


(code-char code)                                              [function]
        Returns a character object whose code attribute is code.


(digit-char weight &optional (radix 10))                      [function]
        Determines whether it is possible to construct a character  that
        has the "weight" weight when considered as a digit of the  radix
        radix. If such a character is found it is returned otherwise nil
        is returned.


(digit-char-p character &optional (radix 10))                 [function]
        If character does not denote a  digit of the radix specified  by
        radix,  then  digit-char-p  is  false;  otherwise  it  returns a
        non-negative integer that is the  "weight" of character in  that
        radix.


(graphic-char-p character)                                    [function]
        Returns true if  character is a  "graphic" (printing)  character
        and  otherwise  false.  Any  character  with  a  non-zero   bits
        attribute is non-graphic.


(lower-case-p character)                                      [function]
        Returns  true  if  character  is  a  lowercase  character;   nil
        otherwise.


(name-char name)                                              [function]
        name must  be an  object coerceable  to a  string as  if by  the
        function string. If name is the same as the name of a  character
        object that object is returned; nil otherwise.


(standard-char-p character)                                   [function]
        Returns   true   if   character    is   an   object   of    type
        standard-char. Returns nil otherwise.


(string-char-p character)                                     [function]
        Returns true  if  character  can  be stored  in  a  string,  nil
        otherwise. Any  character  that satisfies  standard-char-p  also
        satisfies string-char-p.


(upper-case-p character)                                      [function]
        Returns true if character is in uppercase; nil otherwise.



--- C.all/lisp/ref/characters
--- Copyright University of Sussex 1993. All rights reserved.
