REF MISC                                  Titch Le Bek, Rob Duncan, 1986

       COPYRIGHT University of Sussex 1993. All Rights Reserved.

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<                             >>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<        MISCELLANEOUS        >>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<       LISP PROCEDURES       >>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<                             >>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

This file  briefly  describes  the functions,  variables  and  constants
documented in Chapter 24  of the standard Common  Lisp guide, which  is:
Common Lisp: The Language (Guy L. Steele, Digital Press, 1984).


-------------------------------------------------
1  A Listing of Functions Variables and Constants
-------------------------------------------------

*compile-file-pathname*                                       [variable]
        Bound by compile-file to its pathname argument.


*compile-file-truename*                                       [variable]
        Bound  by  compile-file  to  the  truename  of  the  file  being
        compiled.


*compile-print*                                               [variable]
*compile-verbose*                                             [variable]
        Thes  variables  provide  default  values  for  the  :print  and
        :verbose arguments of compile-file.


*features*                                                    [variable]
        Contains a  list  of symbols  naming  features provided  by  the
        implementation. Used  by  the  #+  and  #-  reader  syntax.  See
        HELP * FEATURES.


(apropos string &optional package)                            [function]
        Prints  all  symbols  whose  print  name  contains  string  as a
        substring and prints information  about the function  definition
        and dynamic value of the symbol.


(apropos-list string &optional package)                       [function]
        Returns a  list of  all  symbols in  package whose  print  names
        contain string as a substring.


(compile name &optional definition)                           [function]
        definition is compiled and a compiled-function object  produced.
        If name is a non-nil  symbol then the compiled- function  object
        is installed as the global function definition of the symbol and
        the  symbol   is   returned.   If  name   is   nil,   then   the
        compiled-function object itself is returned.


(compile-file pathname &key :output-file)                     [function]
        The input file specifier pathname should be a Lisp source  file.
        Its contents are compiled and written as a binary object file.


(decode-universal-time universal-time &optional time-zone)    [function]
        The universal-time  in Universal  Time  format is  converted  to
        Decoded Time format to return  9 values : second, minute,  hour,
        date,   month,   year,   day-of-week,    daylight-saving-time-p,
        time-zone.


(describe object)                                             [function]
        Prints information about  object to the  stream in the  variable
        *standard-output*. Returns zero values.


(disassemble name-or-compiled-function)                       [function]
        Prints out compiled code in symbolic format. Primarily used  for
        debugging the compiler.


(documentation symbol type)                                   [function]
        Returns the documentation  string of  type type  for symbol.  If
        none exists it returns nil.


(dribble &optional pathname)                                  [function]
        Creates a readable record of an interactive session and sends it
        to the file pathname. If pathname is not specified the recording
        is terminated.


(ed &optional x)                                              [function]
        Invokes the resident editor, should one exist. If the argument x
        is nil or unsupplied, ed  simply enters the editor, leaving  you
        in the same state as the last time you were in the editor.  If x
        is a pathname, the editor is invoked on the file named by x.  If
        x is  a function  name, i.e.  a symbol  or a  list of  the  form
        (setf symbol), ed attempts  to locate  the source  code for  the
        function and invoke the editor on that code.


(encode-universal-time second minute hour date month year     [function]
                                      &optional time-zone)
        The time  specified  by the  given  components of  Decoded  Time
        format is  encoded  into  Universal Time  format  and  returned.
        Unless specified, time-zone  defaults to the  current time  zone
        adjusted for daylight saving time.


(function-lambda-expression fn)                               [function]
        The argument fn must be a compiled function object. Three values
        are returned:  First, the  defining  lambda expression  for  the
        function (if  this information  is still  available).  Second, a
        flag which  is  nil  if  fn was  defined  in  the  null  lexical
        environment, or a non-nil value otherwise. Third, the "name"  of
        the function (which is not necessarily a symbol).


(get-decoded-time)                                            [function]
        Returns the current time  in Decoded Time  format as 9  values :
        second,    minute,    hour,     date,    month,     day-of-week,
        daylight-saving-time-p, time-zone.


(get-internal-real-time)                                      [function]
        Returns the current time  as a single  integer in Internal  Time
        format. The difference between the  values of two calls to  this
        function is  the amount  of elapsed  real time  between the  two
        calls     measured     in      the     units     defined      by
        internal-time-units-per-second.


(get-internal-run-time)                                       [function]
        Returns the current  run time  as a single  integer in  Internal
        Time format. The  returned value  refers to the  amount of  time
        spent within Poplog. It does not refer to "real" time and is not
        effected by any other processes running on your machine


(get-universal-time universal-time &optional time-zone)       [function]
        The time specified by universal-time in Universal Time format is
        converted to Decoded Time format. 9 values are returned: second,
        minute,    hour,     date,     month,     year,     day-of-week,
        daylight-saving-time-p, time-zone.


(identity object)                                             [function]
        Does nothing except return object unchanged.


(inspect object)                                              [function]
        inspect is an  interactive version of  describe. It enables  the
        inspection and modification of a data structure.


internal-time-units-per-second                                [constant]
        The integer number of internal time units in one second. Value =
        100.


(lisp-implementation-type)                                    [function]
        Returns a string identifying the generic name of the  particular
        Common Lisp implementation.


(lisp-implementation-version)                                 [function]
        Returns a  string identifying  the maintainer's  version of  the
        particular Common Lisp implementation.


(load-time-value form [read-only-p])                      [special-form]
        Arranges for form to be evaluated at load-time in a null lexical
        environment.   If   read-only-p   is   supplied   and   t,   the
        implementation is  permitted to  copy the  result of  evaluating
        form into read-only space.


(long-site-name)                                              [function]
        Returns a  string  identifying  the  physical  location  of  the
        computer hardware.


(machine-instance)                                            [function]
        Returns a  string identifying  the  particular instance  of  the
        computer hardware.


(machine-type)                                                [function]
        Reurns a string  identifying the  generic name  of the  computer
        hardware.


(machine-version)                                             [function]
        Returns  a  string  identifying  the  version  of  the  computer
        hardware on which Common Lisp is running.


(room &optional x)                                            [function]
        Returns information about the state of internal storage and  its
        management. If  x is  nil  a minimal  amount of  information  is
        printed. If x is t the maximal amount is printed. (room)  prints
        an intermediate amount of information.


(short-site-name)                                             [function]
        Returns a  string  identifying  the  physical  location  of  the
        computer hardware.


(sleep n)                                                     [function]
        Execution ceases for n seconds. Returns nil.


(software-type)                                               [function]
        Returns a string identifying the generic name of the  supporting
        software.


(software-version)                                            [function]
        Returns a string identifying the version of relevant software.


(step form)                                                      [macro]
        step evaluates form and returns whatever form returns. The  user
        is allowed to "single-step" through the evaluation.


(time form)                                                      [macro]
        time evaluates form and  returns whatever form returns.  Various
        timing data and other information are printed to the stream that
        is the value of *trace-output*.


(trace {function-name}*)                                         [macro]
        trace causes  the  functions  named in  {function-name}*  to  be
        traced. Whenever such a function is called information about the
        call, the arguments passed,  and the eventually returned  values
        will  be  printed   to  the   stream  that  is   the  value   of
        *trace-output*.


(untrace {function-name}*)                                       [macro]
        untrace is the opposite to trace  in that it will cease  tracing
        named functions. If  no arguments are  given untrace will  cause
        all currently traced functions to be no longer traced.


(with-compilation-unit ({option-name option-value}*)             [macro]
                       {form}*)

        Executes the  body  {form}* as  an  implicit progn.  Within  the
        dynamic context of this form, warnings normally deferred by  the
        compiler until "the end of compilation" will instead be deferred
        to the end of the outermost call to with-compilation-unit.



--- C.all/lisp/ref/misc
--- Copyright University of Sussex 1995. All rights reserved.
