REF EVALUATOR                             Titch Le Bek, Rob Duncan, 1986

       COPYRIGHT University of Sussex 1993. All Rights Reserved.

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<                             >>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<  LISP EVALUATION PROCEDURES >>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<                             >>>>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

This file  briefly  describes  the functions,  variables  and  constants
documented in Chapter 20  of the standard Common  Lisp guide, which  is:
Common Lisp: The Language (Guy L. Steele, Digital Press, 1984).


-------------------------------------------------
1  A Listing of Functions Variables and Constants
-------------------------------------------------

+                                                             [variable]
++                                                            [variable]
+++                                                           [variable]

        While a  form is  being  evaluated by  the top-level  loop,  the
        variable + is bound to the  previous form read by the loop.  The
        variable ++ holds  the previous value  of + (that  is, the  form
        evaluated two  interactions ago),  and  +++ holds  the  previous
        value of ++.


-                                                             [variable]
        While a  form is  being  evaluated by  the top-level  loop,  the
        variable - is bound to the form itself; that is, it is the value
        about to be given to + once this interaction is done.


*                                                             [variable]
**                                                            [variable]
***                                                           [variable]
        While a  form is  being  evaluated by  the top-level  loop,  the
        variable * is bound to the result printed at the end of the last
        time through the  loop; that  is, it  is the  value produced  by
        evaluating the form  in +.  If several  values were  produced, *
        contains the first  value only;  * contains nil  if zero  values
        were produced. The  variable **  holds the  previous value  of *
        (that is,  the result  printed two  interactions ago),  and  ***
        holds the previous value of **.


/                                                             [variable]
//                                                            [variable]
///                                                           [variable]
        While a  form is  being  evaluated by  the top-level  loop,  the
        variable / is bound to a list of the results printed at the  end
        of the last time through the loop; that is, it is a list of  all
        values produced  by evaluating  the form  in +.  The value  of *
        should always be  the same as  the car  of the value  of /.  The
        variable // holds the previous value of / (that is, the  results
        printed two interactions ago), and /// holds the previous  value
        of //. Therefore the  value of ** should  always be the same  as
        the car of //, and similarly for *** and ///.


(constantp object)                                            [function]
        Returns true if object is a constant (i. e. always evaluates  to
        the same thing); nil otherwise.


(eval form)                                                   [function]
        Returns the  result  of  evaluating form  in  the  null  lexical
        environment.



--- C.all/lisp/ref/evaluator
--- Copyright University of Sussex 1993. All rights reserved.
